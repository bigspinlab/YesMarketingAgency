{"version":3,"sources":["scrollTriggerAnimations.js","stopOverScroll.js","counter.js"],"names":["gsapFadeAnimation","animationType","initialY","initialX","gsap","utils","toArray","forEach","animatedItem","delayedAnimation","Number","getAttribute","set","autoAlpha","y","x","to","duration","delay","scrollTrigger","trigger","toggleActions","initAnimations","callAfterResize","func","dc","delayedCall","pause","handler","restart","window","addEventListener","stopOverscroll","element","document","body","documentElement","lastTouch","forcing","lastScroll","forward","isRoot","scroller","scrollingElement","ua","navigator","userAgent","getMax","scrollHeight","innerHeight","clientHeight","addListener","type","passive","revert","style","overflowY","handleTouch","e","evt","changedTouches","pageY","scrollTop","preventDefault","handleScroll","setTimeout","match","overscrollBehavior","PureCounter","selector","once","registerPlugin","ScrollTrigger","config","nullTargetWarn"],"mappings":"AAKA,SAAAA,kBAAAC,EAAAC,EAAAC,GACAC,KAAAC,MAAAC,QAAA,eAAAL,OAEAM,SACAC,IAEA,IAAAA,EACA,OAGA,MAAAC,EAAAC,OAAAF,EAAAG,aAAA,oBAAA,KAAA,EAEAP,KAAAQ,IAAAJ,EAAA,CACAK,UAAA,EACAC,EAAAZ,EACAa,EAAAZ,IAGAC,KAAAY,GACAR,EAAA,CACAS,SAAA,IACAJ,UAAA,EACAC,EAAA,EACAC,EAAA,EACAG,MAAAT,EACAU,cAAA,CACAC,QAAAZ,EACAa,cAAA,wBAGA,GAIA,CAEA,SAAAC,iBACAtB,kBAAA,UAAA,IAAA,GACAA,kBAAA,UAAA,EAAA,GACAA,kBAAA,iBAAA,GAAA,KACAA,kBAAA,kBAAA,EAAA,IACA,CAEA,SAAAuB,gBAAAC,EAAAN,GACA,IAAAO,EAAArB,KAAAsB,YAAAR,GAAA,GAAAM,GAAAG,QACAC,EAAA,IAAAH,EAAAI,SAAA,GAEA,OADAC,OAAAC,iBAAA,SAAAH,GACAA,CACA,CCrDA,SAAAI,eAAAC,KACAA,EAAA7B,KAAAC,MAAAC,QAAA2B,GAAA,IAAAH,UACAI,SAAAC,MAAAF,IAAAC,SAAAE,mBAAAH,EAAAH,QACA,IACAO,EAAAC,EADAC,EAAA,EAEAC,GAAA,EACAC,EAAAR,IAAAH,OACAY,EAAAD,EAAAP,SAAAS,iBAAAV,EACAW,EAAAd,OAAAe,UAAAC,UAAA,GACAC,EAAAN,EAAA,IAAAC,EAAAM,aAAAlB,OAAAmB,YAAA,IAAAP,EAAAM,aAAAN,EAAAQ,aACAC,EAAA,CAAAC,EAAA5B,IAAAS,EAAAF,iBAAAqB,EAAA5B,EAAA,CACA6B,SAAA,IAEAC,EAAA,KACAZ,EAAAa,MAAAC,UAAA,OACAlB,GAAA,CAAA,EAQAmB,EAAAC,IACA,IAAAC,EAAAD,EAAAE,eAAAF,EAAAE,eAAA,GAAAF,EACAlB,EAAAmB,EAAAE,OAAAxB,IACAG,GAAAE,EAAAoB,WAAA,GAAAtB,GAAAE,EAAAoB,WAAAf,IAAA,IAAA,cAAAW,EAAAN,KACAM,EAAAK,iBAEA1B,EAAAsB,EAAAE,KACA,EAEAG,EAAAN,IACA,IAAApB,EAAA,CACA,IAAAwB,EAAApB,EAAAoB,UACAtB,EAAAsB,EAAAvB,IACAC,GAAAsB,EAAA,GAAAtB,GAAAsB,GAAAf,IAAA,KACAW,EAAAK,iBAnBAzB,GAAA,EACAI,EAAAa,MAAAC,UAAA,UACAhB,GAAAE,EAAAoB,UAAA,EAAApB,EAAAoB,UAAA,EAAApB,EAAAoB,UAAAf,IAAA,EACAkB,WAAAX,EAAA,IAmBAf,EAAAuB,CACA,GAEA,eAAA5B,UAAAU,EAAAsB,MAAA,8BACAf,EAAA,SAAAa,GACAb,EAAA,aAAAM,GACAN,EAAA,YAAAM,IAEAf,EAAAa,MAAAY,mBAAA,MACA,CCjDA,IAAAC,YAAA,CACAC,SAAA,cACApD,SAAA,EACAqD,MAAA,IAGA,IAAAF,YAAA,CACAC,SAAA,sBACApD,SAAA,EACAqD,MAAA,IFTAlE,KAAAmE,eAAAC,eACApE,KAAAqE,OAAA,CACAC,gBAAA,IAqDAnD,gBAAAD,iBAAA,ICJAU","file":"app.min.js","sourcesContent":["gsap.registerPlugin(ScrollTrigger);\ngsap.config({\n  nullTargetWarn: false,\n});\n\nfunction gsapFadeAnimation(animationType, initialY, initialX) {\n  const animatedContainers = gsap.utils.toArray(`[data-gsap=\"${animationType}\"]`)\n\n  animatedContainers.forEach(\n    (animatedItem) => {\n\n      if (!animatedItem) {\n        return;\n      }\n\n      const delayedAnimation = Number(animatedItem.getAttribute(\"data-gsap-delay\")) / 1000 ?? 0;\n\n      gsap.set(animatedItem, {\n        autoAlpha: 0,\n        y: initialY,\n        x: initialX\n      })\n\n      gsap.to(\n        animatedItem, {\n          duration: 1.5,\n          autoAlpha: 1,\n          y: 0,\n          x: 0,\n          delay: delayedAnimation,\n          scrollTrigger: {\n            trigger: animatedItem,\n            toggleActions: \"play none none none\", // change first to play if is only once\n          }\n        }\n      )\n    }\n  );\n\n}\n\nfunction initAnimations() {\n  gsapFadeAnimation('fade-up', 100, 0);\n  gsapFadeAnimation('fade-in', 0, 0);\n  gsapFadeAnimation('fade-from-left', 0, -100);\n  gsapFadeAnimation('fade-from-right', 0, 100);\n}\n\nfunction callAfterResize(func, delay) {\n  let dc = gsap.delayedCall(delay || 0.2, func).pause(),\n    handler = () => dc.restart(true);\n  window.addEventListener(\"resize\", handler);\n  return handler; // in case you want to window.removeEventListener() later\n}\n\ncallAfterResize(initAnimations(), 0.3);","function stopOverscroll(element) {\n  element = gsap.utils.toArray(element)[0] || window;\n  (element === document.body || element === document.documentElement) && (element = window);\n  let lastScroll = 0,\n    lastTouch, forcing,\n    forward = true,\n    isRoot = element === window,\n    scroller = isRoot ? document.scrollingElement : element,\n    ua = window.navigator.userAgent + \"\",\n    getMax = isRoot ? () => scroller.scrollHeight - window.innerHeight : () => scroller.scrollHeight - scroller.clientHeight,\n    addListener = (type, func) => element.addEventListener(type, func, {\n      passive: false\n    }),\n    revert = () => {\n      scroller.style.overflowY = \"auto\";\n      forcing = false;\n    },\n    kill = () => {\n      forcing = true;\n      scroller.style.overflowY = \"hidden\";\n      (!forward && scroller.scrollTop < 1) ? (scroller.scrollTop = 1) : (scroller.scrollTop = getMax() - 1);\n      setTimeout(revert, 1);\n    },\n    handleTouch = e => {\n      let evt = e.changedTouches ? e.changedTouches[0] : e,\n        forward = evt.pageY <= lastTouch;\n      if (((!forward && scroller.scrollTop <= 1) || (forward && scroller.scrollTop >= getMax() - 1)) && e.type === \"touchmove\") {\n        e.preventDefault();\n      } else {\n        lastTouch = evt.pageY;\n      }\n    },\n    handleScroll = e => {\n      if (!forcing) {\n        let scrollTop = scroller.scrollTop;\n        forward = scrollTop > lastScroll;\n        if ((!forward && scrollTop < 1) || (forward && scrollTop >= getMax() - 1)) {\n          e.preventDefault();\n          kill();\n        }\n        lastScroll = scrollTop;\n      }\n    };\n  if (\"ontouchend\" in document && !!ua.match(/Version\\/[\\d\\.]+.*Safari/)) {\n    addListener('scroll', handleScroll);\n    addListener('touchstart', handleTouch);\n    addListener('touchmove', handleTouch);\n  }\n  scroller.style.overscrollBehavior = \"none\";\n}\n\nstopOverscroll();\n","new PureCounter({\n  selector: \".js-counter\",\n  duration: 3,\n  once: false,\n})\n\nnew PureCounter({\n  selector: \".js-counter-decimal\",\n  duration: 3,\n  once: false,\n})"]}