{"version":3,"sources":["scrollTriggerAnimations.js","stopOverScroll.js","counter.js"],"names":["gsapFadeAnimation","animationType","initialY","initialX","gsap","utils","toArray","forEach","animation","delayedAnimation","hasAttribute","Number","getAttribute","animationFade","fromTo","autoAlpha","y","x","duration","delay","ScrollTrigger","create","trigger","toggleActions","config","autoRefreshEvents","initAnimations","stopOverscroll","element","window","document","body","documentElement","lastTouch","forcing","lastScroll","forward","isRoot","scroller","scrollingElement","ua","navigator","userAgent","getMax","scrollHeight","innerHeight","clientHeight","addListener","type","func","addEventListener","passive","revert","style","overflowY","handleTouch","e","evt","changedTouches","pageY","scrollTop","preventDefault","handleScroll","setTimeout","match","overscrollBehavior","PureCounter","selector","once","registerPlugin"],"mappings":"AAEA,SAAAA,kBAAAC,EAAAC,EAAAC,GACAC,KAAAC,MAAAC,QAAA,eAAAL,OAEAM,SACAC,IACA,IAAAC,EAAA,EACAD,EAAAE,aAAA,qBACAD,EACAE,OAAAH,EAAAI,aAAA,oBAAA,KAGA,MAAAC,EAAAT,KAAAU,OACAN,EAAA,CACAO,UAAA,EACAC,EAAAd,EACAe,EAAAd,GACA,CACAe,SAAA,EACAH,UAAA,EACAC,EAAA,EACAC,EAAA,EACAE,MAAAV,IAGAW,cAAAC,OAAA,CACAC,QAAAd,EACAA,UAAAK,EACAU,cAAA,wBAEA,IAIAH,cAAAI,OAAA,CACAC,kBAAA,0CAEA,CAEA,SAAAC,iBACA1B,kBAAA,UAAA,IAAA,GACAA,kBAAA,UAAA,EAAA,GACAA,kBAAA,iBAAA,GAAA,KACAA,kBAAA,kBAAA,EAAA,IACA,CC7CA,SAAA2B,eAAAC,KACAA,EAAAxB,KAAAC,MAAAC,QAAAsB,GAAA,IAAAC,UACAC,SAAAC,MAAAH,IAAAE,SAAAE,mBAAAJ,EAAAC,QACA,IACAI,EAAAC,EADAC,EAAA,EAEAC,GAAA,EACAC,EAAAT,IAAAC,OACAS,EAAAD,EAAAP,SAAAS,iBAAAX,EACAY,EAAAX,OAAAY,UAAAC,UAAA,GACAC,EAAAN,EAAA,IAAAC,EAAAM,aAAAf,OAAAgB,YAAA,IAAAP,EAAAM,aAAAN,EAAAQ,aACAC,EAAA,CAAAC,EAAAC,IAAArB,EAAAsB,iBAAAF,EAAAC,EAAA,CACAE,SAAA,IAEAC,EAAA,KACAd,EAAAe,MAAAC,UAAA,OACApB,GAAA,CAAA,EAQAqB,EAAAC,IACA,IAAAC,EAAAD,EAAAE,eAAAF,EAAAE,eAAA,GAAAF,EACApB,EAAAqB,EAAAE,OAAA1B,IACAG,GAAAE,EAAAsB,WAAA,GAAAxB,GAAAE,EAAAsB,WAAAjB,IAAA,IAAA,cAAAa,EAAAR,KACAQ,EAAAK,iBAEA5B,EAAAwB,EAAAE,KACA,EAEAG,EAAAN,IACA,IAAAtB,EAAA,CACA,IAAA0B,EAAAtB,EAAAsB,UACAxB,EAAAwB,EAAAzB,IACAC,GAAAwB,EAAA,GAAAxB,GAAAwB,GAAAjB,IAAA,KACAa,EAAAK,iBAnBA3B,GAAA,EACAI,EAAAe,MAAAC,UAAA,UACAlB,GAAAE,EAAAsB,UAAA,EAAAtB,EAAAsB,UAAA,EAAAtB,EAAAsB,UAAAjB,IAAA,EACAoB,WAAAX,EAAA,IAmBAjB,EAAAyB,CACA,GAEA,eAAA9B,UAAAU,EAAAwB,MAAA,8BACAjB,EAAA,SAAAe,GACAf,EAAA,aAAAQ,GACAR,EAAA,YAAAQ,IAEAjB,EAAAe,MAAAY,mBAAA,MACA,CCjDA,IAAAC,YAAA,CACAC,SAAA,cACAjD,SAAA,EACAkD,MAAA,IAGA,IAAAF,YAAA,CACAC,SAAA,sBACAjD,SAAA,EACAkD,MAAA,IFTAhE,KAAAiE,eAAAjD,eA+CAM,iBCIAC","file":"app.min.js","sourcesContent":["gsap.registerPlugin(ScrollTrigger);\n\nfunction gsapFadeAnimation(animationType, initialY, initialX) {\n  const animatedContainers = gsap.utils.toArray(`[data-gsap=\"${animationType}\"]`)\n\n  animatedContainers.forEach(\n    (animation) => {\n      let delayedAnimation = 0;\n      if (animation.hasAttribute(\"data-gsap-delay\")) {\n        delayedAnimation =\n          Number(animation.getAttribute(\"data-gsap-delay\")) / 1000;\n      }\n\n      const animationFade = gsap.fromTo(\n        animation, {\n          autoAlpha: 0,\n          y: initialY,\n          x: initialX\n        }, {\n          duration: 1,\n          autoAlpha: 1,\n          y: 0,\n          x: 0,\n          delay: delayedAnimation\n        }\n      );\n      ScrollTrigger.create({\n        trigger: animation,\n        animation: animationFade,\n        toggleActions: \"play none none pause\", // change first to play if is only once\n        //once: true, // uncomment if is only once\n      });\n    }\n  );\n\n  ScrollTrigger.config({\n    autoRefreshEvents: \"visibilitychange,DOMContentLoaded,load\" // notice \"resize\" isn't in the list\n  });\n}\n\nfunction initAnimations() {\n  gsapFadeAnimation('fade-up', 100, 0);\n  gsapFadeAnimation('fade-in', 0, 0);\n  gsapFadeAnimation('fade-from-left', 0, -100);\n  gsapFadeAnimation('fade-from-right', 0, 100);\n}\n\ninitAnimations();","function stopOverscroll(element) {\n  element = gsap.utils.toArray(element)[0] || window;\n  (element === document.body || element === document.documentElement) && (element = window);\n  let lastScroll = 0,\n    lastTouch, forcing,\n    forward = true,\n    isRoot = element === window,\n    scroller = isRoot ? document.scrollingElement : element,\n    ua = window.navigator.userAgent + \"\",\n    getMax = isRoot ? () => scroller.scrollHeight - window.innerHeight : () => scroller.scrollHeight - scroller.clientHeight,\n    addListener = (type, func) => element.addEventListener(type, func, {\n      passive: false\n    }),\n    revert = () => {\n      scroller.style.overflowY = \"auto\";\n      forcing = false;\n    },\n    kill = () => {\n      forcing = true;\n      scroller.style.overflowY = \"hidden\";\n      (!forward && scroller.scrollTop < 1) ? (scroller.scrollTop = 1) : (scroller.scrollTop = getMax() - 1);\n      setTimeout(revert, 1);\n    },\n    handleTouch = e => {\n      let evt = e.changedTouches ? e.changedTouches[0] : e,\n        forward = evt.pageY <= lastTouch;\n      if (((!forward && scroller.scrollTop <= 1) || (forward && scroller.scrollTop >= getMax() - 1)) && e.type === \"touchmove\") {\n        e.preventDefault();\n      } else {\n        lastTouch = evt.pageY;\n      }\n    },\n    handleScroll = e => {\n      if (!forcing) {\n        let scrollTop = scroller.scrollTop;\n        forward = scrollTop > lastScroll;\n        if ((!forward && scrollTop < 1) || (forward && scrollTop >= getMax() - 1)) {\n          e.preventDefault();\n          kill();\n        }\n        lastScroll = scrollTop;\n      }\n    };\n  if (\"ontouchend\" in document && !!ua.match(/Version\\/[\\d\\.]+.*Safari/)) {\n    addListener('scroll', handleScroll);\n    addListener('touchstart', handleTouch);\n    addListener('touchmove', handleTouch);\n  }\n  scroller.style.overscrollBehavior = \"none\";\n}\n\nstopOverscroll();\n","new PureCounter({\n  selector: \".js-counter\",\n  duration: 3,\n  once: false,\n})\n\nnew PureCounter({\n  selector: \".js-counter-decimal\",\n  duration: 3,\n  once: false,\n})"]}